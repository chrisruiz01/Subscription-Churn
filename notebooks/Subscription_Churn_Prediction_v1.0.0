{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "794b4019",
   "metadata": {},
   "source": [
    "https://www.kaggle.com/datasets/sarathperingayi/performance-of-a-subscription-business\n",
    "\n",
    "This dataset can be used to analyze customer behaviour and preferences, identify trends in subscription types, evaluate the effectiveness of referral strategies, and determine which demographic groups are more likely to subscribe to certain types of subscriptions. It can also be used to generate insights into customer retention and churn rates, as well as to develop targeted marketing campaigns based on customer demographics and referral sources.\n",
    "\n",
    "The dataset provided contains information related to customer transactions, subscriptions, demographics, and referral types. It includes the following attributes:\n",
    "\n",
    "\t• cust_id: A unique identifier for each customer.\n",
    "\t• transaction_type: The type of transaction.\n",
    "\t• transaction_date: The date when the transaction was made.\n",
    "\t• subscription_type: The type of subscription, which can be BASIC, MAX, or PRO.\n",
    "\t• subscription_price: The price of the subscription.\n",
    "\t• customer_gender: The gender of the customer, which can be Male or Female.\n",
    "\t• age_group: The age group of the customer.\n",
    "\t• customer_country: The country where the customer is located.\n",
    "\t• referral_type: The type of referral, which can be Google Ads, Facebook, Display, or others.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f57925ab",
   "metadata": {},
   "source": [
    "### Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "975b74e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>.container { width:100% !important; }</style>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "pd.set_option('display.max_columns', None)\n",
    "\n",
    "from IPython.display import display, HTML\n",
    "display(HTML(\"<style>.container { width:100% !important; }</style>\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a3bd0cf",
   "metadata": {},
   "source": [
    "### Load dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f1768e08",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r'C:\\Users\\chris\\OneDrive\\Documents\\Subscription-Churn\\data\\raw\\Customer_Subscription_And_Transaction_Details.csv', parse_dates=['transaction_date'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48bab6ec",
   "metadata": {},
   "source": [
    "### Data overview"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4c6148b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id transaction_type transaction_date subscription_type  \\\n",
       "0        1          initial       2020-09-01             BASIC   \n",
       "1        2          initial       2022-03-01             BASIC   \n",
       "2        3          initial       2020-10-01               MAX   \n",
       "3        3        REDUCTION       2022-02-01             BASIC   \n",
       "4        4          initial       2022-05-01               PRO   \n",
       "\n",
       "   subscription_price customer_gender age_group customer_country referral_type  \n",
       "0                  33            Male     35-44          Denmark    Google Ads  \n",
       "1                  53          Female     18-24          Denmark      facebook  \n",
       "2                  99          Female     25-34           Norway      facebook  \n",
       "3                  53          Female     25-34           Norway      facebook  \n",
       "4                  85            Male     18-24           Sweden       Display  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f74c649",
   "metadata": {},
   "source": [
    "**Data types and missing values**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9cb050d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 18106 entries, 0 to 18105\n",
      "Data columns (total 9 columns):\n",
      " #   Column              Non-Null Count  Dtype         \n",
      "---  ------              --------------  -----         \n",
      " 0   cust_id             18106 non-null  int64         \n",
      " 1   transaction_type    18106 non-null  object        \n",
      " 2   transaction_date    18106 non-null  datetime64[ns]\n",
      " 3   subscription_type   18106 non-null  object        \n",
      " 4   subscription_price  18106 non-null  int64         \n",
      " 5   customer_gender     18106 non-null  object        \n",
      " 6   age_group           18106 non-null  object        \n",
      " 7   customer_country    18106 non-null  object        \n",
      " 8   referral_type       18106 non-null  object        \n",
      "dtypes: datetime64[ns](1), int64(2), object(6)\n",
      "memory usage: 1.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16018dc9",
   "metadata": {},
   "source": [
    "**Summary statistics**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4e8c2226",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>18106.0</td>\n",
       "      <td>18106</td>\n",
       "      <td>18106.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>5176.0</td>\n",
       "      <td>2021-08-22 10:08:05.938363136</td>\n",
       "      <td>73.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2020-01-01 00:00:00</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2590.0</td>\n",
       "      <td>2021-01-01 00:00:00</td>\n",
       "      <td>53.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>5158.0</td>\n",
       "      <td>2021-10-01 00:00:00</td>\n",
       "      <td>75.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7767.0</td>\n",
       "      <td>2022-05-01 00:00:00</td>\n",
       "      <td>99.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>10366.0</td>\n",
       "      <td>2022-12-01 00:00:00</td>\n",
       "      <td>119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2989.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id               transaction_date  subscription_price\n",
       "count  18106.0                          18106             18106.0\n",
       "mean    5176.0  2021-08-22 10:08:05.938363136                73.0\n",
       "min        1.0            2020-01-01 00:00:00                33.0\n",
       "25%     2590.0            2021-01-01 00:00:00                53.0\n",
       "50%     5158.0            2021-10-01 00:00:00                75.0\n",
       "75%     7767.0            2022-05-01 00:00:00                99.0\n",
       "max    10366.0            2022-12-01 00:00:00               119.0\n",
       "std     2989.0                            NaN                28.0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "round(df.describe(), )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "29e92389",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['initial', 'REDUCTION', 'CHURN', 'UPGRADE'], dtype=object)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['transaction_type'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34f415f5",
   "metadata": {},
   "source": [
    "## Data cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7bef11b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating a binary 'churn' column based on 'transaction_type'\n",
    "df['churn'] = (df['transaction_type'] == 'CHURN').astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "88b20c34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id transaction_type transaction_date subscription_type  \\\n",
       "0        1          initial       2020-09-01             BASIC   \n",
       "1        2          initial       2022-03-01             BASIC   \n",
       "2        3          initial       2020-10-01               MAX   \n",
       "3        3        REDUCTION       2022-02-01             BASIC   \n",
       "4        4          initial       2022-05-01               PRO   \n",
       "\n",
       "   subscription_price customer_gender age_group customer_country  \\\n",
       "0                  33            Male     35-44          Denmark   \n",
       "1                  53          Female     18-24          Denmark   \n",
       "2                  99          Female     25-34           Norway   \n",
       "3                  53          Female     25-34           Norway   \n",
       "4                  85            Male     18-24           Sweden   \n",
       "\n",
       "  referral_type  churn  \n",
       "0    Google Ads      0  \n",
       "1      facebook      0  \n",
       "2      facebook      0  \n",
       "3      facebook      0  \n",
       "4       Display      0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7696ea4b",
   "metadata": {},
   "source": [
    "**how many unique customers have churned?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8e205131",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2052"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# only churned customers to get the count of unique customers who churned\n",
    "df[df['transaction_type'] == 'CHURN']['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a721f842",
   "metadata": {},
   "source": [
    "- 2052 unique churned customers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "867aa579",
   "metadata": {},
   "source": [
    "#### Checking for duplicate records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a4112c9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2dcb8ae",
   "metadata": {},
   "source": [
    "**Next, let's check for duplicate transactions on the same date. Let's first sort by cust_id and transaction_date**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4c9acfa4",
   "metadata": {},
   "outputs": [],
   "source": [
    "sorted_df = df.sort_values(['cust_id', 'transaction_date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "866dd5e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>37</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2020-11-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>37</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2020-11-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>65</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>566</th>\n",
       "      <td>321</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>567</th>\n",
       "      <td>321</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1056</th>\n",
       "      <td>599</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-07-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17143</th>\n",
       "      <td>9803</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17351</th>\n",
       "      <td>9918</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17352</th>\n",
       "      <td>9918</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17981</th>\n",
       "      <td>10290</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2021-11-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17982</th>\n",
       "      <td>10290</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-11-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>138 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "57          37          UPGRADE       2020-11-01               MAX   \n",
       "58          37            CHURN       2020-11-01               PRO   \n",
       "566        321          UPGRADE       2021-01-01               MAX   \n",
       "567        321            CHURN       2021-01-01             BASIC   \n",
       "1056       599          UPGRADE       2022-07-01               MAX   \n",
       "...        ...              ...              ...               ...   \n",
       "17143     9803            CHURN       2020-10-01             BASIC   \n",
       "17351     9918          UPGRADE       2022-02-01               MAX   \n",
       "17352     9918            CHURN       2022-02-01             BASIC   \n",
       "17981    10290          UPGRADE       2021-11-01               MAX   \n",
       "17982    10290            CHURN       2021-11-01             BASIC   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "57                     99          Female     35-44           Sweden   \n",
       "58                     65          Female     35-44           Sweden   \n",
       "566                   109          Female     35-44          Denmark   \n",
       "567                    43          Female     35-44          Denmark   \n",
       "1056                  119          Female     55-65          Denmark   \n",
       "...                   ...             ...       ...              ...   \n",
       "17143                  33          Female     18-24           Sweden   \n",
       "17351                 119          Female     45-54          Denmark   \n",
       "17352                  53          Female     45-54          Denmark   \n",
       "17981                 109          Female     18-24           Norway   \n",
       "17982                  43          Female     18-24           Norway   \n",
       "\n",
       "      referral_type  churn  \n",
       "57         facebook      0  \n",
       "58         facebook      1  \n",
       "566      Google Ads      0  \n",
       "567      Google Ads      1  \n",
       "1056        Unknown      0  \n",
       "...             ...    ...  \n",
       "17143    Google Ads      1  \n",
       "17351    Google Ads      0  \n",
       "17352    Google Ads      1  \n",
       "17981      facebook      0  \n",
       "17982      facebook      1  \n",
       "\n",
       "[138 rows x 10 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking how many customers have more than one transaction on the same date\n",
    "dupe_date = sorted_df.groupby(['cust_id', 'transaction_date']).filter(lambda x: len(x) > 1)\n",
    "dupe_date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e4eb9d7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "transaction_type\n",
       "UPGRADE    69\n",
       "CHURN      69\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What transaction types are these? \n",
    "dupe_date['transaction_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f3b42a4e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([   57,   566,  1056,  1102,  1193,  1460,  1572,  2335,  2397,  2875,\n",
       "        3010,  3033,  4070,  4366,  4962,  5017,  5255,  5579,  5758,  5771,\n",
       "        5893,  6011,  6117,  6183,  6541,  6568,  7292,  7798,  8100,  8500,\n",
       "        8531,  9096,  9242,  9462,  9733,  9748, 10339, 10392, 10482, 10579,\n",
       "       10909, 11402, 12079, 12718, 12876, 13080, 13093, 13918, 14175, 14304,\n",
       "       14412, 14583, 14932, 15210, 15264, 15273, 15349, 15423, 15889, 15958,\n",
       "       15993, 16293, 16674, 16716, 16728, 16749, 17142, 17351, 17981],\n",
       "      dtype='int64')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the indexes where transaction_type is not CHURN\n",
    "dupe_date_index = dupe_date[dupe_date['transaction_type'] != 'CHURN'].index\n",
    "dupe_date_index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e883adb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18101</th>\n",
       "      <td>10364</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102</th>\n",
       "      <td>10365</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18103</th>\n",
       "      <td>10365</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18104</th>\n",
       "      <td>10366</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18105</th>\n",
       "      <td>10366</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>18037 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "0            1          initial       2020-09-01             BASIC   \n",
       "1            2          initial       2022-03-01             BASIC   \n",
       "2            3          initial       2020-10-01               MAX   \n",
       "3            3        REDUCTION       2022-02-01             BASIC   \n",
       "4            4          initial       2022-05-01               PRO   \n",
       "...        ...              ...              ...               ...   \n",
       "18101    10364          UPGRADE       2022-09-01               MAX   \n",
       "18102    10365          initial       2021-05-01               PRO   \n",
       "18103    10365        REDUCTION       2021-07-01             BASIC   \n",
       "18104    10366          initial       2021-01-01             BASIC   \n",
       "18105    10366            CHURN       2022-02-01             BASIC   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "0                      33            Male     35-44          Denmark   \n",
       "1                      53          Female     18-24          Denmark   \n",
       "2                      99          Female     25-34           Norway   \n",
       "3                      53          Female     25-34           Norway   \n",
       "4                      85            Male     18-24           Sweden   \n",
       "...                   ...             ...       ...              ...   \n",
       "18101                 119          Female     45-54           Norway   \n",
       "18102                  75            Male     55-65           Norway   \n",
       "18103                  43            Male     55-65           Norway   \n",
       "18104                  43            Male     18-24          Denmark   \n",
       "18105                  53            Male     18-24          Denmark   \n",
       "\n",
       "      referral_type  churn  \n",
       "0        Google Ads      0  \n",
       "1          facebook      0  \n",
       "2          facebook      0  \n",
       "3          facebook      0  \n",
       "4           Display      0  \n",
       "...             ...    ...  \n",
       "18101      facebook      0  \n",
       "18102    Google Ads      0  \n",
       "18103    Google Ads      0  \n",
       "18104      facebook      0  \n",
       "18105      facebook      1  \n",
       "\n",
       "[18037 rows x 10 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Excluding those indexes\n",
    "sorted_df_1 = sorted_df[~sorted_df.index.isin(dupe_date_index)]\n",
    "sorted_df_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "67a61c9a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validating no more dupes\n",
    "sorted_df_1.groupby(['cust_id', 'transaction_date']).filter(lambda x: len(x) > 1).shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2019826e",
   "metadata": {},
   "source": [
    "- Good, no more dupe dates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "4304131a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2052"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validating we didn't lose any customers that churned \n",
    "sorted_df_1[sorted_df_1['transaction_type'] == 'CHURN']['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c0b72a62",
   "metadata": {},
   "source": [
    "- Good, we didn't lose any customers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "473e0041",
   "metadata": {},
   "source": [
    "**Next, let's check for duplicate transaction types**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a542be9e",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>222</th>\n",
       "      <td>128</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-04-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>223</th>\n",
       "      <td>128</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-06-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>409</th>\n",
       "      <td>236</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-04-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>410</th>\n",
       "      <td>236</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>530</th>\n",
       "      <td>303</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17627</th>\n",
       "      <td>10082</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Male</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17898</th>\n",
       "      <td>10240</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-04-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17899</th>\n",
       "      <td>10240</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-06-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17943</th>\n",
       "      <td>10267</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17944</th>\n",
       "      <td>10267</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-04-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>278 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "222        128            CHURN       2022-04-01               PRO   \n",
       "223        128            CHURN       2022-06-01             BASIC   \n",
       "409        236            CHURN       2021-04-01               MAX   \n",
       "410        236            CHURN       2021-05-01               PRO   \n",
       "530        303            CHURN       2021-02-01             BASIC   \n",
       "...        ...              ...              ...               ...   \n",
       "17627    10082            CHURN       2022-08-01               MAX   \n",
       "17898    10240            CHURN       2022-04-01               MAX   \n",
       "17899    10240            CHURN       2022-06-01               MAX   \n",
       "17943    10267            CHURN       2021-01-01               MAX   \n",
       "17944    10267            CHURN       2021-04-01               MAX   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "222                    85          Female     35-44          Denmark   \n",
       "223                    53          Female     35-44          Denmark   \n",
       "409                   109            Male     35-44          Finland   \n",
       "410                    75            Male     35-44          Finland   \n",
       "530                    43          Female     55-65          Denmark   \n",
       "...                   ...             ...       ...              ...   \n",
       "17627                 119            Male     45-54           Sweden   \n",
       "17898                 119          Female     55-65          Finland   \n",
       "17899                 119          Female     55-65          Finland   \n",
       "17943                 109          Female     45-54          Denmark   \n",
       "17944                 109          Female     45-54          Denmark   \n",
       "\n",
       "        referral_type  churn  \n",
       "222        Google Ads      1  \n",
       "223        Google Ads      1  \n",
       "409        Google Ads      1  \n",
       "410        Google Ads      1  \n",
       "530          facebook      1  \n",
       "...               ...    ...  \n",
       "17627      Google Ads      1  \n",
       "17898  Organic Search      1  \n",
       "17899  Organic Search      1  \n",
       "17943      Google Ads      1  \n",
       "17944      Google Ads      1  \n",
       "\n",
       "[278 rows x 10 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dupe_ttype = sorted_df_1.groupby(['cust_id', 'transaction_type']).filter(lambda x: len(x) > 1)\n",
    "dupe_ttype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7553cdf4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "transaction_type\n",
       "CHURN    278\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dupe_ttype['transaction_type'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87076140",
   "metadata": {},
   "source": [
    "- Looks like some customers have more than one churn date, which doesn't make sense, as the dataset doesn't have a transaction type for something like reinstatement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "af2f9ca9",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([  223,   410,   532,   568,   599,   606,   780,   824,   877,   918,\n",
       "       ...\n",
       "       17075, 17209, 17217, 17266, 17303, 17373, 17420, 17627, 17899, 17944],\n",
       "      dtype='int64', length=135)"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting the index values that we need to exclude from the main dataframe (the latest dates which are extra / appear to be erroneous churn transactions)\n",
    "dupe_ttype_index = dupe_ttype.drop_duplicates(subset=['cust_id', 'transaction_type'], keep='last').index\n",
    "dupe_ttype_index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "244da0cf",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18101</th>\n",
       "      <td>10364</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102</th>\n",
       "      <td>10365</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18103</th>\n",
       "      <td>10365</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18104</th>\n",
       "      <td>10366</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18105</th>\n",
       "      <td>10366</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17902 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "0            1          initial       2020-09-01             BASIC   \n",
       "1            2          initial       2022-03-01             BASIC   \n",
       "2            3          initial       2020-10-01               MAX   \n",
       "3            3        REDUCTION       2022-02-01             BASIC   \n",
       "4            4          initial       2022-05-01               PRO   \n",
       "...        ...              ...              ...               ...   \n",
       "18101    10364          UPGRADE       2022-09-01               MAX   \n",
       "18102    10365          initial       2021-05-01               PRO   \n",
       "18103    10365        REDUCTION       2021-07-01             BASIC   \n",
       "18104    10366          initial       2021-01-01             BASIC   \n",
       "18105    10366            CHURN       2022-02-01             BASIC   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "0                      33            Male     35-44          Denmark   \n",
       "1                      53          Female     18-24          Denmark   \n",
       "2                      99          Female     25-34           Norway   \n",
       "3                      53          Female     25-34           Norway   \n",
       "4                      85            Male     18-24           Sweden   \n",
       "...                   ...             ...       ...              ...   \n",
       "18101                 119          Female     45-54           Norway   \n",
       "18102                  75            Male     55-65           Norway   \n",
       "18103                  43            Male     55-65           Norway   \n",
       "18104                  43            Male     18-24          Denmark   \n",
       "18105                  53            Male     18-24          Denmark   \n",
       "\n",
       "      referral_type  churn  \n",
       "0        Google Ads      0  \n",
       "1          facebook      0  \n",
       "2          facebook      0  \n",
       "3          facebook      0  \n",
       "4           Display      0  \n",
       "...             ...    ...  \n",
       "18101      facebook      0  \n",
       "18102    Google Ads      0  \n",
       "18103    Google Ads      0  \n",
       "18104      facebook      0  \n",
       "18105      facebook      1  \n",
       "\n",
       "[17902 rows x 10 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Excluding those duplicate indexes\n",
    "sorted_df_2 = sorted_df_1[~sorted_df_1.index.isin(dupe_ttype_index)]\n",
    "sorted_df_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "28fbcee9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2052"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validating we didn't lose churned customers\n",
    "sorted_df_2[sorted_df_2['transaction_type'] == 'CHURN']['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58f8ed1d",
   "metadata": {},
   "source": [
    "- Good, we didn't lose any customers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "50c02715",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6738</th>\n",
       "      <td>3865</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-12-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6739</th>\n",
       "      <td>3865</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6885</th>\n",
       "      <td>3946</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6886</th>\n",
       "      <td>3946</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7835</th>\n",
       "      <td>4479</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-09-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7836</th>\n",
       "      <td>4479</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-11-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12080</th>\n",
       "      <td>6913</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12081</th>\n",
       "      <td>6913</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13094</th>\n",
       "      <td>7483</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Other</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>TV</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13095</th>\n",
       "      <td>7483</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Other</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>TV</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14139</th>\n",
       "      <td>8093</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14140</th>\n",
       "      <td>8093</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-08-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Organic Search</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15959</th>\n",
       "      <td>9127</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-02-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15960</th>\n",
       "      <td>9127</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>109</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17072</th>\n",
       "      <td>9765</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17074</th>\n",
       "      <td>9765</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "6738      3865            CHURN       2021-12-01             BASIC   \n",
       "6739      3865            CHURN       2022-03-01               MAX   \n",
       "6885      3946            CHURN       2021-06-01             BASIC   \n",
       "6886      3946            CHURN       2021-10-01               PRO   \n",
       "7835      4479            CHURN       2021-09-01               PRO   \n",
       "7836      4479            CHURN       2021-11-01             BASIC   \n",
       "12080     6913            CHURN       2021-07-01               PRO   \n",
       "12081     6913            CHURN       2022-02-01               MAX   \n",
       "13094     7483            CHURN       2022-03-01             BASIC   \n",
       "13095     7483            CHURN       2022-08-01               PRO   \n",
       "14139     8093            CHURN       2021-07-01               PRO   \n",
       "14140     8093            CHURN       2021-08-01               MAX   \n",
       "15959     9127            CHURN       2021-02-01               PRO   \n",
       "15960     9127            CHURN       2021-10-01               MAX   \n",
       "17072     9765            CHURN       2021-05-01               PRO   \n",
       "17074     9765            CHURN       2022-09-01               MAX   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "6738                   43          Female     35-44          Finland   \n",
       "6739                  119          Female     35-44          Finland   \n",
       "6885                   43            Male     25-34           Sweden   \n",
       "6886                   75            Male     25-34           Sweden   \n",
       "7835                   75          Female     18-24          Finland   \n",
       "7836                   43          Female     18-24          Finland   \n",
       "12080                  75            Male     35-44          Finland   \n",
       "12081                 119            Male     35-44          Finland   \n",
       "13094                  53           Other     25-34          Denmark   \n",
       "13095                  85           Other     25-34          Denmark   \n",
       "14139                  75          Female     18-24          Finland   \n",
       "14140                 109          Female     18-24          Finland   \n",
       "15959                  75            Male     18-24          Finland   \n",
       "15960                 109            Male     18-24          Finland   \n",
       "17072                  75          Female     18-24          Denmark   \n",
       "17074                 119          Female     18-24          Denmark   \n",
       "\n",
       "        referral_type  churn  \n",
       "6738       Google Ads      1  \n",
       "6739       Google Ads      1  \n",
       "6885         facebook      1  \n",
       "6886         facebook      1  \n",
       "7835       Google Ads      1  \n",
       "7836       Google Ads      1  \n",
       "12080  Organic Search      1  \n",
       "12081  Organic Search      1  \n",
       "13094              TV      1  \n",
       "13095              TV      1  \n",
       "14139  Organic Search      1  \n",
       "14140  Organic Search      1  \n",
       "15959      Google Ads      1  \n",
       "15960      Google Ads      1  \n",
       "17072         Unknown      1  \n",
       "17074         Unknown      1  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking if there are more duplicates remaining (more erroneous / extra churn transactions)\n",
    "dupe_ttype_1 = sorted_df_2.groupby(['cust_id', 'transaction_type']).filter(lambda x: len(x) > 1)\n",
    "dupe_ttype_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "eca25072",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([6739, 6886, 7836, 12081, 13095, 14140, 15960, 17074], dtype='int64')"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Getting those last indexes again\n",
    "dupe_ttype_index_1 = dupe_ttype_1.drop_duplicates(subset=['cust_id', 'transaction_type'], keep='last').index\n",
    "dupe_ttype_index_1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "39b98022",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18101</th>\n",
       "      <td>10364</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18102</th>\n",
       "      <td>10365</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18103</th>\n",
       "      <td>10365</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18104</th>\n",
       "      <td>10366</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18105</th>\n",
       "      <td>10366</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17894 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "0            1          initial       2020-09-01             BASIC   \n",
       "1            2          initial       2022-03-01             BASIC   \n",
       "2            3          initial       2020-10-01               MAX   \n",
       "3            3        REDUCTION       2022-02-01             BASIC   \n",
       "4            4          initial       2022-05-01               PRO   \n",
       "...        ...              ...              ...               ...   \n",
       "18101    10364          UPGRADE       2022-09-01               MAX   \n",
       "18102    10365          initial       2021-05-01               PRO   \n",
       "18103    10365        REDUCTION       2021-07-01             BASIC   \n",
       "18104    10366          initial       2021-01-01             BASIC   \n",
       "18105    10366            CHURN       2022-02-01             BASIC   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "0                      33            Male     35-44          Denmark   \n",
       "1                      53          Female     18-24          Denmark   \n",
       "2                      99          Female     25-34           Norway   \n",
       "3                      53          Female     25-34           Norway   \n",
       "4                      85            Male     18-24           Sweden   \n",
       "...                   ...             ...       ...              ...   \n",
       "18101                 119          Female     45-54           Norway   \n",
       "18102                  75            Male     55-65           Norway   \n",
       "18103                  43            Male     55-65           Norway   \n",
       "18104                  43            Male     18-24          Denmark   \n",
       "18105                  53            Male     18-24          Denmark   \n",
       "\n",
       "      referral_type  churn  \n",
       "0        Google Ads      0  \n",
       "1          facebook      0  \n",
       "2          facebook      0  \n",
       "3          facebook      0  \n",
       "4           Display      0  \n",
       "...             ...    ...  \n",
       "18101      facebook      0  \n",
       "18102    Google Ads      0  \n",
       "18103    Google Ads      0  \n",
       "18104      facebook      0  \n",
       "18105      facebook      1  \n",
       "\n",
       "[17894 rows x 10 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Excluding those indexes again\n",
    "sorted_df_3 = sorted_df_2[~sorted_df_2.index.isin(dupe_ttype_index_1)]\n",
    "sorted_df_3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "283e3804",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2052"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validating no lost churned customers\n",
    "sorted_df_3[sorted_df_3['transaction_type'] == 'CHURN']['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1517cd73",
   "metadata": {},
   "source": [
    "- Good, we didn't lose any customers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b81e2957",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10366"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Validating total count of unique customers\n",
    "sorted_df_3['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f1f615fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>85</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17889</th>\n",
       "      <td>10364</td>\n",
       "      <td>UPGRADE</td>\n",
       "      <td>2022-09-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>119</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>PRO</td>\n",
       "      <td>75</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17891</th>\n",
       "      <td>10365</td>\n",
       "      <td>REDUCTION</td>\n",
       "      <td>2021-07-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17892</th>\n",
       "      <td>10366</td>\n",
       "      <td>initial</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>43</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17893</th>\n",
       "      <td>10366</td>\n",
       "      <td>CHURN</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17894 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_type transaction_date subscription_type  \\\n",
       "0            1          initial       2020-09-01             BASIC   \n",
       "1            2          initial       2022-03-01             BASIC   \n",
       "2            3          initial       2020-10-01               MAX   \n",
       "3            3        REDUCTION       2022-02-01             BASIC   \n",
       "4            4          initial       2022-05-01               PRO   \n",
       "...        ...              ...              ...               ...   \n",
       "17889    10364          UPGRADE       2022-09-01               MAX   \n",
       "17890    10365          initial       2021-05-01               PRO   \n",
       "17891    10365        REDUCTION       2021-07-01             BASIC   \n",
       "17892    10366          initial       2021-01-01             BASIC   \n",
       "17893    10366            CHURN       2022-02-01             BASIC   \n",
       "\n",
       "       subscription_price customer_gender age_group customer_country  \\\n",
       "0                      33            Male     35-44          Denmark   \n",
       "1                      53          Female     18-24          Denmark   \n",
       "2                      99          Female     25-34           Norway   \n",
       "3                      53          Female     25-34           Norway   \n",
       "4                      85            Male     18-24           Sweden   \n",
       "...                   ...             ...       ...              ...   \n",
       "17889                 119          Female     45-54           Norway   \n",
       "17890                  75            Male     55-65           Norway   \n",
       "17891                  43            Male     55-65           Norway   \n",
       "17892                  43            Male     18-24          Denmark   \n",
       "17893                  53            Male     18-24          Denmark   \n",
       "\n",
       "      referral_type  churn  \n",
       "0        Google Ads      0  \n",
       "1          facebook      0  \n",
       "2          facebook      0  \n",
       "3          facebook      0  \n",
       "4           Display      0  \n",
       "...             ...    ...  \n",
       "17889      facebook      0  \n",
       "17890    Google Ads      0  \n",
       "17891    Google Ads      0  \n",
       "17892      facebook      0  \n",
       "17893      facebook      1  \n",
       "\n",
       "[17894 rows x 10 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Renaming dataframe to indicate deduped records and resetting the index\n",
    "deduped_df = sorted_df_3.copy().reset_index(drop=True)\n",
    "deduped_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1ac5124",
   "metadata": {},
   "source": [
    "## Feature Engineering"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f93c98fc",
   "metadata": {},
   "source": [
    "### Date features"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20d6edae",
   "metadata": {},
   "source": [
    "**Create start date column**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f40ad86a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>2021-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17885</th>\n",
       "      <td>10363</td>\n",
       "      <td>2020-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>2021-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>2021-05-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17892</th>\n",
       "      <td>10366</td>\n",
       "      <td>2021-01-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_date\n",
       "0            1       2020-09-01\n",
       "1            2       2022-03-01\n",
       "2            3       2020-10-01\n",
       "4            4       2022-05-01\n",
       "5            5       2022-08-01\n",
       "...        ...              ...\n",
       "17883    10362       2021-01-01\n",
       "17885    10363       2020-10-01\n",
       "17888    10364       2021-04-01\n",
       "17890    10365       2021-05-01\n",
       "17892    10366       2021-01-01\n",
       "\n",
       "[10366 rows x 2 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# filter transaction type on initial\n",
    "start = deduped_df[deduped_df['transaction_type'] == 'initial'][['cust_id', 'transaction_date']]\n",
    "start"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3ad556fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id start_date\n",
       "0        1 2020-09-01\n",
       "1        2 2022-03-01\n",
       "2        3 2020-10-01\n",
       "4        4 2022-05-01\n",
       "5        5 2022-08-01"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start.rename(columns={'transaction_date': 'start_date'}, inplace=True)\n",
    "start.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d073fa27",
   "metadata": {},
   "source": [
    "**Create end date column**\n",
    "- Churned customers: end date will be churn date\n",
    "- Non-churned customers: end date will be max date in the dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b4078ef",
   "metadata": {},
   "source": [
    "**end date churn**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4ab77f3b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>2021-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9</td>\n",
       "      <td>2021-03-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>17</td>\n",
       "      <td>2022-08-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>22</td>\n",
       "      <td>2022-11-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>26</td>\n",
       "      <td>2022-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17834</th>\n",
       "      <td>10328</td>\n",
       "      <td>2022-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17851</th>\n",
       "      <td>10340</td>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17873</th>\n",
       "      <td>10355</td>\n",
       "      <td>2020-11-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17887</th>\n",
       "      <td>10363</td>\n",
       "      <td>2022-02-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17893</th>\n",
       "      <td>10366</td>\n",
       "      <td>2022-02-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2052 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id transaction_date\n",
       "9            8       2021-04-01\n",
       "11           9       2021-03-01\n",
       "24          17       2022-08-01\n",
       "32          22       2022-11-01\n",
       "41          26       2022-10-01\n",
       "...        ...              ...\n",
       "17834    10328       2022-04-01\n",
       "17851    10340       2021-06-01\n",
       "17873    10355       2020-11-01\n",
       "17887    10363       2022-02-01\n",
       "17893    10366       2022-02-01\n",
       "\n",
       "[2052 rows x 2 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "end_churn = deduped_df[deduped_df['transaction_type'] == 'CHURN'][['cust_id', 'transaction_date']]\n",
    "end_churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9d460162",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>2021-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9</td>\n",
       "      <td>2021-03-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>17</td>\n",
       "      <td>2022-08-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>22</td>\n",
       "      <td>2022-11-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>26</td>\n",
       "      <td>2022-10-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    cust_id   end_date\n",
       "9         8 2021-04-01\n",
       "11        9 2021-03-01\n",
       "24       17 2022-08-01\n",
       "32       22 2022-11-01\n",
       "41       26 2022-10-01"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "end_churn.rename(columns={'transaction_date': 'end_date'}, inplace=True)\n",
    "end_churn.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5049eba1",
   "metadata": {},
   "source": [
    "**end date not churn**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "a6534004",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Timestamp('2022-12-01 00:00:00')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_date = deduped_df[deduped_df['transaction_type'] != 'CHURN']['transaction_date'].max()\n",
    "max_date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "b6a07588",
   "metadata": {},
   "outputs": [],
   "source": [
    "end_churn_cust = end_churn['cust_id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "512b3f8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17881</th>\n",
       "      <td>10360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17882</th>\n",
       "      <td>10361</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8314 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id\n",
       "0            1\n",
       "1            2\n",
       "2            3\n",
       "4            4\n",
       "5            5\n",
       "...        ...\n",
       "17881    10360\n",
       "17882    10361\n",
       "17883    10362\n",
       "17888    10364\n",
       "17890    10365\n",
       "\n",
       "[8314 rows x 1 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "end_no_churn = deduped_df[~deduped_df['cust_id'].isin(end_churn_cust)][['cust_id']].drop_duplicates()\n",
    "end_no_churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "839148ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17881</th>\n",
       "      <td>10360</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17882</th>\n",
       "      <td>10361</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8314 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id   end_date\n",
       "0            1 2022-12-01\n",
       "1            2 2022-12-01\n",
       "2            3 2022-12-01\n",
       "4            4 2022-12-01\n",
       "5            5 2022-12-01\n",
       "...        ...        ...\n",
       "17881    10360 2022-12-01\n",
       "17882    10361 2022-12-01\n",
       "17883    10362 2022-12-01\n",
       "17888    10364 2022-12-01\n",
       "17890    10365 2022-12-01\n",
       "\n",
       "[8314 rows x 2 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "end_no_churn['end_date'] = max_date\n",
    "end_no_churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "50fc4434",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "end_no_churn['end_date'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c598945f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>2021-04-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9</td>\n",
       "      <td>2021-03-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>17</td>\n",
       "      <td>2022-08-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>22</td>\n",
       "      <td>2022-11-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>26</td>\n",
       "      <td>2022-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17881</th>\n",
       "      <td>10360</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17882</th>\n",
       "      <td>10361</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id   end_date\n",
       "9            8 2021-04-01\n",
       "11           9 2021-03-01\n",
       "24          17 2022-08-01\n",
       "32          22 2022-11-01\n",
       "41          26 2022-10-01\n",
       "...        ...        ...\n",
       "17881    10360 2022-12-01\n",
       "17882    10361 2022-12-01\n",
       "17883    10362 2022-12-01\n",
       "17888    10364 2022-12-01\n",
       "17890    10365 2022-12-01\n",
       "\n",
       "[10366 rows x 2 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# union end date dataframes\n",
    "end = pd.concat([end_churn, end_no_churn])\n",
    "end"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a93da9f",
   "metadata": {},
   "source": [
    "**Merge start and end**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "57701363",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10361</th>\n",
       "      <td>10362</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10362</th>\n",
       "      <td>10363</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10363</th>\n",
       "      <td>10364</td>\n",
       "      <td>2021-04-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10364</th>\n",
       "      <td>10365</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10365</th>\n",
       "      <td>10366</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id start_date   end_date\n",
       "0            1 2020-09-01 2022-12-01\n",
       "1            2 2022-03-01 2022-12-01\n",
       "2            3 2020-10-01 2022-12-01\n",
       "3            4 2022-05-01 2022-12-01\n",
       "4            5 2022-08-01 2022-12-01\n",
       "...        ...        ...        ...\n",
       "10361    10362 2021-01-01 2022-12-01\n",
       "10362    10363 2020-10-01 2022-02-01\n",
       "10363    10364 2021-04-01 2022-12-01\n",
       "10364    10365 2021-05-01 2022-12-01\n",
       "10365    10366 2021-01-01 2022-02-01\n",
       "\n",
       "[10366 rows x 3 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start_end = start.merge(end, on='cust_id')\n",
    "start_end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "632d4e90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 3)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# validating that no end dates are earlier than start date\n",
    "start_end[start_end['end_date'] < start_end['start_date']].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "2ec6bf8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>791</th>\n",
       "      <td>792</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8997</th>\n",
       "      <td>8998</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5858</th>\n",
       "      <td>5859</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8070</th>\n",
       "      <td>8071</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5413</th>\n",
       "      <td>5414</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3683</th>\n",
       "      <td>3684</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5233</th>\n",
       "      <td>5234</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8535</th>\n",
       "      <td>8536</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10252</th>\n",
       "      <td>10253</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4330</th>\n",
       "      <td>4331</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id start_date   end_date  tenure\n",
       "791        792 2022-12-01 2022-12-01       0\n",
       "8997      8998 2022-12-01 2022-12-01       0\n",
       "5858      5859 2022-12-01 2022-12-01       0\n",
       "8070      8071 2022-12-01 2022-12-01       0\n",
       "5413      5414 2022-12-01 2022-12-01       0\n",
       "...        ...        ...        ...     ...\n",
       "3683      3684 2020-01-01 2022-12-01    1065\n",
       "5233      5234 2020-01-01 2022-12-01    1065\n",
       "8535      8536 2020-01-01 2022-12-01    1065\n",
       "10252    10253 2020-01-01 2022-12-01    1065\n",
       "4330      4331 2020-01-01 2022-12-01    1065\n",
       "\n",
       "[10366 rows x 4 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start_end['tenure'] = (start_end['end_date'] - start_end['start_date']).dt.days\n",
    "start_end.sort_values('tenure')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "9ea84762",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>791</th>\n",
       "      <td>792</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8997</th>\n",
       "      <td>8998</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5858</th>\n",
       "      <td>5859</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8070</th>\n",
       "      <td>8071</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5413</th>\n",
       "      <td>5414</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3683</th>\n",
       "      <td>3684</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5233</th>\n",
       "      <td>5234</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8535</th>\n",
       "      <td>8536</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10252</th>\n",
       "      <td>10253</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4330</th>\n",
       "      <td>4331</td>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>1095</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id start_date   end_date  tenure\n",
       "791        792 2022-12-01 2022-12-01      30\n",
       "8997      8998 2022-12-01 2022-12-01      30\n",
       "5858      5859 2022-12-01 2022-12-01      30\n",
       "8070      8071 2022-12-01 2022-12-01      30\n",
       "5413      5414 2022-12-01 2022-12-01      30\n",
       "...        ...        ...        ...     ...\n",
       "3683      3684 2020-01-01 2022-12-01    1095\n",
       "5233      5234 2020-01-01 2022-12-01    1095\n",
       "8535      8536 2020-01-01 2022-12-01    1095\n",
       "10252    10253 2020-01-01 2022-12-01    1095\n",
       "4330      4331 2020-01-01 2022-12-01    1095\n",
       "\n",
       "[10366 rows x 4 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Since transaction dates are at the beginning of the month, the tenure should represent the entire month so there are no customers with zero days tenure\n",
    "# Therefore, adding 30 to tenure\n",
    "start_end['tenure'] = start_end['tenure'] + 30\n",
    "start_end.sort_values('tenure')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "503a5644",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.0"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# validating that max tenure divided by 365 equals 3 years\n",
    "1095 / 365"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "772bec5e",
   "metadata": {},
   "source": [
    "### Numeric features"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b46471bb",
   "metadata": {},
   "source": [
    "**Average price**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "5a6d4859",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>transaction_type</th>\n",
       "      <th>transaction_date</th>\n",
       "      <th>subscription_type</th>\n",
       "      <th>subscription_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>33</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>initial</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>BASIC</td>\n",
       "      <td>53</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>initial</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>MAX</td>\n",
       "      <td>99</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id transaction_type transaction_date subscription_type  \\\n",
       "0        1          initial       2020-09-01             BASIC   \n",
       "1        2          initial       2022-03-01             BASIC   \n",
       "2        3          initial       2020-10-01               MAX   \n",
       "\n",
       "   subscription_price customer_gender age_group customer_country  \\\n",
       "0                  33            Male     35-44          Denmark   \n",
       "1                  53          Female     18-24          Denmark   \n",
       "2                  99          Female     25-34           Norway   \n",
       "\n",
       "  referral_type  churn  \n",
       "0    Google Ads      0  \n",
       "1      facebook      0  \n",
       "2      facebook      0  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "deduped_df.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "df04a0aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "cust_id\n",
       "1        33.000000\n",
       "2        53.000000\n",
       "3        76.000000\n",
       "4        85.000000\n",
       "5        53.000000\n",
       "           ...    \n",
       "10362    64.000000\n",
       "10363    53.666667\n",
       "10364    97.000000\n",
       "10365    59.000000\n",
       "10366    48.000000\n",
       "Name: subscription_price, Length: 10366, dtype: float64"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "avg_price = deduped_df.groupby(['cust_id'])['subscription_price'].mean()\n",
    "avg_price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "22ec1b1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "      <th>subscription_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>851</td>\n",
       "      <td>33.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>305</td>\n",
       "      <td>53.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>821</td>\n",
       "      <td>76.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>244</td>\n",
       "      <td>85.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>152</td>\n",
       "      <td>53.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10361</th>\n",
       "      <td>10362</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>729</td>\n",
       "      <td>64.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10362</th>\n",
       "      <td>10363</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>518</td>\n",
       "      <td>53.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10363</th>\n",
       "      <td>10364</td>\n",
       "      <td>2021-04-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>639</td>\n",
       "      <td>97.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10364</th>\n",
       "      <td>10365</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>609</td>\n",
       "      <td>59.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10365</th>\n",
       "      <td>10366</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>426</td>\n",
       "      <td>48.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id start_date   end_date  tenure  subscription_price\n",
       "0            1 2020-09-01 2022-12-01     851           33.000000\n",
       "1            2 2022-03-01 2022-12-01     305           53.000000\n",
       "2            3 2020-10-01 2022-12-01     821           76.000000\n",
       "3            4 2022-05-01 2022-12-01     244           85.000000\n",
       "4            5 2022-08-01 2022-12-01     152           53.000000\n",
       "...        ...        ...        ...     ...                 ...\n",
       "10361    10362 2021-01-01 2022-12-01     729           64.000000\n",
       "10362    10363 2020-10-01 2022-02-01     518           53.666667\n",
       "10363    10364 2021-04-01 2022-12-01     639           97.000000\n",
       "10364    10365 2021-05-01 2022-12-01     609           59.000000\n",
       "10365    10366 2021-01-01 2022-02-01     426           48.000000\n",
       "\n",
       "[10366 rows x 5 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start_end_price = start_end.merge(avg_price, on='cust_id')\n",
    "start_end_price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "de90af71",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "      <th>avg_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>851</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id start_date   end_date  tenure  avg_price\n",
       "0        1 2020-09-01 2022-12-01     851       33.0"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start_end_price.rename(columns={'subscription_price': 'avg_price'}, inplace=True)\n",
    "start_end_price.head(1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b5f51cb",
   "metadata": {},
   "source": [
    "**Isolating churned customers**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "f132dfef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17834</th>\n",
       "      <td>10328</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17851</th>\n",
       "      <td>10340</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17873</th>\n",
       "      <td>10355</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17887</th>\n",
       "      <td>10363</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17893</th>\n",
       "      <td>10366</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2052 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id  churn\n",
       "9            8      1\n",
       "11           9      1\n",
       "24          17      1\n",
       "32          22      1\n",
       "41          26      1\n",
       "...        ...    ...\n",
       "17834    10328      1\n",
       "17851    10340      1\n",
       "17873    10355      1\n",
       "17887    10363      1\n",
       "17893    10366      1\n",
       "\n",
       "[2052 rows x 2 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "churned = deduped_df[deduped_df['churn'] == 1][['cust_id', 'churn']]\n",
    "churned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "e7aa7c30",
   "metadata": {},
   "outputs": [],
   "source": [
    "churned_cust = churned['cust_id']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "57a08cba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "churn\n",
       "0    12852\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "deduped_df[~deduped_df['cust_id'].isin(churned_cust)]['churn'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "118c6b42",
   "metadata": {},
   "source": [
    "**Isolating non-churned customers**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "a936e3aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17881</th>\n",
       "      <td>10360</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17882</th>\n",
       "      <td>10361</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8314 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id  churn\n",
       "0            1      0\n",
       "1            2      0\n",
       "2            3      0\n",
       "4            4      0\n",
       "5            5      0\n",
       "...        ...    ...\n",
       "17881    10360      0\n",
       "17882    10361      0\n",
       "17883    10362      0\n",
       "17888    10364      0\n",
       "17890    10365      0\n",
       "\n",
       "[8314 rows x 2 columns]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "non_churned = deduped_df[~deduped_df['cust_id'].isin(churned_cust)][['cust_id', 'churn']].drop_duplicates()\n",
    "non_churned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "3ebc4ab8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17881</th>\n",
       "      <td>10360</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17882</th>\n",
       "      <td>10361</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id  churn\n",
       "9            8      1\n",
       "11           9      1\n",
       "24          17      1\n",
       "32          22      1\n",
       "41          26      1\n",
       "...        ...    ...\n",
       "17881    10360      0\n",
       "17882    10361      0\n",
       "17883    10362      0\n",
       "17888    10364      0\n",
       "17890    10365      0\n",
       "\n",
       "[10366 rows x 2 columns]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_churn = pd.concat([churned, non_churned])\n",
    "cust_churn"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7987feb1",
   "metadata": {},
   "source": [
    "### Final data frame before EDA and Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "de8c873b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "      <th>avg_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>851</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id start_date   end_date  tenure  avg_price\n",
       "0        1 2020-09-01 2022-12-01     851       33.0"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "start_end_price.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "d945d714",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['cust_id', 'transaction_type', 'transaction_date', 'subscription_type',\n",
       "       'subscription_price', 'customer_gender', 'age_group',\n",
       "       'customer_country', 'referral_type', 'churn'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "deduped_df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "7df15c14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Google Ads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17883</th>\n",
       "      <td>10362</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17885</th>\n",
       "      <td>10363</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17888</th>\n",
       "      <td>10364</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17890</th>\n",
       "      <td>10365</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17892</th>\n",
       "      <td>10366</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id customer_gender age_group customer_country referral_type\n",
       "0            1            Male     35-44          Denmark    Google Ads\n",
       "1            2          Female     18-24          Denmark      facebook\n",
       "2            3          Female     25-34           Norway      facebook\n",
       "4            4            Male     18-24           Sweden       Display\n",
       "5            5            Male     35-44           Sweden    Google Ads\n",
       "...        ...             ...       ...              ...           ...\n",
       "17883    10362          Female     25-34          Denmark      facebook\n",
       "17885    10363          Female     18-24          Finland    Google Ads\n",
       "17888    10364          Female     45-54           Norway      facebook\n",
       "17890    10365            Male     55-65           Norway    Google Ads\n",
       "17892    10366            Male     18-24          Denmark      facebook\n",
       "\n",
       "[10366 rows x 5 columns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cust_dems_channel = deduped_df[['cust_id', 'customer_gender', 'age_group', 'customer_country', 'referral_type']].drop_duplicates()\n",
    "cust_dems_channel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "2fe196d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "      <th>avg_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>851</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>305</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>821</td>\n",
       "      <td>76.000000</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>244</td>\n",
       "      <td>85.000000</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>152</td>\n",
       "      <td>53.000000</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10361</th>\n",
       "      <td>10362</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>729</td>\n",
       "      <td>64.000000</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10362</th>\n",
       "      <td>10363</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>518</td>\n",
       "      <td>53.666667</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Finland</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10363</th>\n",
       "      <td>10364</td>\n",
       "      <td>2021-04-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>639</td>\n",
       "      <td>97.000000</td>\n",
       "      <td>Female</td>\n",
       "      <td>45-54</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10364</th>\n",
       "      <td>10365</td>\n",
       "      <td>2021-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>609</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>Male</td>\n",
       "      <td>55-65</td>\n",
       "      <td>Norway</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10365</th>\n",
       "      <td>10366</td>\n",
       "      <td>2021-01-01</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>426</td>\n",
       "      <td>48.000000</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10366 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cust_id start_date   end_date  tenure  avg_price customer_gender  \\\n",
       "0            1 2020-09-01 2022-12-01     851  33.000000            Male   \n",
       "1            2 2022-03-01 2022-12-01     305  53.000000          Female   \n",
       "2            3 2020-10-01 2022-12-01     821  76.000000          Female   \n",
       "3            4 2022-05-01 2022-12-01     244  85.000000            Male   \n",
       "4            5 2022-08-01 2022-12-01     152  53.000000            Male   \n",
       "...        ...        ...        ...     ...        ...             ...   \n",
       "10361    10362 2021-01-01 2022-12-01     729  64.000000          Female   \n",
       "10362    10363 2020-10-01 2022-02-01     518  53.666667          Female   \n",
       "10363    10364 2021-04-01 2022-12-01     639  97.000000          Female   \n",
       "10364    10365 2021-05-01 2022-12-01     609  59.000000            Male   \n",
       "10365    10366 2021-01-01 2022-02-01     426  48.000000            Male   \n",
       "\n",
       "      age_group customer_country referral_type  churn  \n",
       "0         35-44          Denmark    Google Ads      0  \n",
       "1         18-24          Denmark      facebook      0  \n",
       "2         25-34           Norway      facebook      0  \n",
       "3         18-24           Sweden       Display      0  \n",
       "4         35-44           Sweden    Google Ads      0  \n",
       "...         ...              ...           ...    ...  \n",
       "10361     25-34          Denmark      facebook      0  \n",
       "10362     18-24          Finland    Google Ads      1  \n",
       "10363     45-54           Norway      facebook      0  \n",
       "10364     55-65           Norway    Google Ads      0  \n",
       "10365     18-24          Denmark      facebook      1  \n",
       "\n",
       "[10366 rows x 10 columns]"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df = start_end_price.merge(cust_dems_channel, on='cust_id').merge(cust_churn, on='cust_id')\n",
    "final_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "d5d1f9a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "churn\n",
       "0    8314\n",
       "1    2052\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# validating churn\n",
    "final_df['churn'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "c447e54d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10366"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df['cust_id'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "ff2bec73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cust_id</th>\n",
       "      <th>start_date</th>\n",
       "      <th>end_date</th>\n",
       "      <th>tenure</th>\n",
       "      <th>avg_price</th>\n",
       "      <th>customer_gender</th>\n",
       "      <th>age_group</th>\n",
       "      <th>customer_country</th>\n",
       "      <th>referral_type</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2020-09-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>851</td>\n",
       "      <td>33.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2022-03-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>305</td>\n",
       "      <td>53.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Denmark</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>2020-10-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>821</td>\n",
       "      <td>76.0</td>\n",
       "      <td>Female</td>\n",
       "      <td>25-34</td>\n",
       "      <td>Norway</td>\n",
       "      <td>facebook</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>2022-05-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>244</td>\n",
       "      <td>85.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>18-24</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Display</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>2022-08-01</td>\n",
       "      <td>2022-12-01</td>\n",
       "      <td>152</td>\n",
       "      <td>53.0</td>\n",
       "      <td>Male</td>\n",
       "      <td>35-44</td>\n",
       "      <td>Sweden</td>\n",
       "      <td>Google Ads</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cust_id start_date   end_date  tenure  avg_price customer_gender age_group  \\\n",
       "0        1 2020-09-01 2022-12-01     851       33.0            Male     35-44   \n",
       "1        2 2022-03-01 2022-12-01     305       53.0          Female     18-24   \n",
       "2        3 2020-10-01 2022-12-01     821       76.0          Female     25-34   \n",
       "3        4 2022-05-01 2022-12-01     244       85.0            Male     18-24   \n",
       "4        5 2022-08-01 2022-12-01     152       53.0            Male     35-44   \n",
       "\n",
       "  customer_country referral_type  churn  \n",
       "0          Denmark    Google Ads      0  \n",
       "1          Denmark      facebook      0  \n",
       "2           Norway      facebook      0  \n",
       "3           Sweden       Display      0  \n",
       "4           Sweden    Google Ads      0  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecf808e9",
   "metadata": {},
   "source": [
    "### Placeholder for additional feature engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "3b3f2a41",
   "metadata": {},
   "outputs": [],
   "source": [
    "# pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da931c67",
   "metadata": {},
   "source": [
    "## Placeholder for EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "bb7f7803",
   "metadata": {},
   "outputs": [],
   "source": [
    "# pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea09e0d2",
   "metadata": {},
   "source": [
    "## Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "24eb5188",
   "metadata": {},
   "outputs": [],
   "source": [
    "# pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db7a37fd",
   "metadata": {},
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "db5260a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "590087f6",
   "metadata": {},
   "source": [
    "## Model Evaluation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "e7dad712",
   "metadata": {},
   "outputs": [],
   "source": [
    "# pass"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
